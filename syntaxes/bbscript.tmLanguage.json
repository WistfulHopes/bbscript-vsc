{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"displayName": "BBScript",
	"name": "bbscript",
	"patterns": [
		{
			"include": "#instructions"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#block-comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#punctuation"
		}
	],
	"repository": {
		"instructions": {
			"patterns": [
				{
					"begin": "^(?:\\s?)*([a-zA-Z0-9_]+)\\(",
					"beginCaptures": {
						"0": {
							"name": "entity.name.function.bbscript"
						},
						"1": {
							"name": "punctuation.brackets.round.bbscript"
						}
					},
					"comment": "instruction",
					"end": "\\);$",
					"name": "meta.function.call.bbscript",
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#block-comments"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#constants"
						},
						{
							"include": "#punctuation-comma"
						},
						{
							"include": "#punctuation-semi"
						},
						{
							"include": "#coperands"
						},
						{
							"include": "#enums"
						}
					]
				}
			]
		},
		"coperands": {
			"patterns": [
				{
					"begin": "(Const|Var)\\(",
					"beginCaptures": {
						"0": {
							"name": "entity.name.function.preprocessor.bbscript"
						},
						"1": {
							"name": "punctuation.brackets.round.bbscript"
						}
					},
					"comment": "coperand",
					"end": "\\)",
					"name": "meta.coperand.bbscript",
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#block-comments"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#constants"
						},
						{
							"include": "#vars"
						}
					]
				}
			]
		},
		"vars": {
			"patterns": [
				{
					"comment": "var",
					"match": "([a-zA-Z0-9_]+)",
					"name": "variable.other.readwrite.bbscript"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"comment": "int literal",
					"match": "-?\\b0x[0-9a-fA-F]+\\b|\\b0\\b|-?\\b[1-9][0-9]*\\b",
					"name": "constant.numeric.decimal.bbscript"
				},
				{
					"comment": "boolean constant",
					"match": "\\b(true|false)\\b",
					"name": "constant.language.boolean.bbscript"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.bbscript",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.bbscript",
					"match": "\\\\(x[A-Fa-f0-9][A-Fa-f0-9]?|.)"
				}
			]
		},
		"punctuation-comma": {
			"comment": "comma",
			"match": ",",
			"name": "punctuation.separator.comma.bbscript"
		},
		"punctuation-paren": {
			"comment": "parentheses, round brackets",
			"match": "[()]",
			"name": "punctuation.brackets.round.bbscript"
		},
		"punctuation-semi": {
			"comment": "semicolon",
			"match": ";",
			"name": "punctuation.terminator.statement.bbscript"
		},
		"block-comments": {
			"patterns": [
				{
					"comment": "empty block comments",
					"match": "/\\*\\*/",
					"name": "comment.block.bbscript"
				},
				{
					"begin": "/\\*\\*",
					"comment": "block documentation comments",
					"end": "\\*/",
					"name": "comment.block.documentation.bbscript",
					"patterns": [
						{
							"include": "#block-comments"
						}
					]
				},
				{
					"begin": "/\\*(?!\\*)",
					"comment": "block comments",
					"end": "\\*/",
					"name": "comment.block.bbscript",
					"patterns": [
						{
							"include": "#block-comments"
						}
					]
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.bbscript"
						}
					},
					"comment": "documentation comments",
					"match": "(///).*$",
					"name": "comment.line.documentation.bbscript"
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.bbscript"
						}
					},
					"comment": "line comments",
					"match": "(//).*$",
					"name": "comment.line.double-slash.bbscript"
				}
			]
		},
		"enums": {
			"patterns": [
				{
					"comment": "enum member",
					"match": "([a-zA-Z0-9_]+)",
					"name": "variable.other.enummember.bbscript"
				}
			]
		}
	},
	"scopeName": "source.bbs"
}